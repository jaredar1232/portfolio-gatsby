[
  {
    "name": "Nike Mock Up",
    "width": 85,
    "video": "https://d1o11p1jeyf1dw.cloudfront.net/Nike.mp4",
    "github": "https://github.com/jaredar1232/Nike-Mock-Up",
    "details": {
      "name": "Nike Mock Up",
      "description": "push my CSS skills to match that of the best frontline developers employed by the sportswear giant Nike",
      "keyPoints": [
        "Constructed a Nike product display page and followed a micro-service architecture to keep concerns separate and modular",
        "Generated 5000+ random reviews for 100 real nike products with data persistence in order to simulate a realistic user experience",
        "Queried a Mongo database with nested subdocuments by implementing CRUD operations and a custom API to give the user appropriate information",
        "Rendered a single page comprised of 3 micro-services that communicate via url change and proxy server"
      ],
      "icons": [
        "MongoDB",
        "Express.js",
        "React",
        "Node.js",
        "AWS",
        "Faker.js",
        "styled-components",
        "http-proxy",
        "HTML5",
        "CSS3"
      ]
    }
  },
  {
    "name": "Streak Tracker",
    "width": 35,
    "video": "https://d1o11p1jeyf1dw.cloudfront.net/Streak.mp4",
    "github": "https://github.com/jaredar1232/Streak-Activity-Tracker",
    "details": {
      "name": "Streak Tracker",
      "description": "produce a minimum viable product under a time constraint. My team and I brainstormed, designed, and built out a functioning competative activity tracker in under a week using tech we had never worked with before",
      "keyPoints": [
        "Implemented a monolithic architecture with git feature branch workflow to produce a more uniform codebase",
        "Utilized Firebase for authentication, adaptable storage, and session state persistence to maintain full features while under time constraints",
        "Practiced mobile first emphasis to ensure the final application didnâ€™t sacrifice key features when displayed on mobile"
      ],
      "icons": [
        "Firebase",
        "React",
        "Node.js",
        "Chakra",
        "styled-components",
        "HTML5",
        "CSS3"
      ]
    }
  },
  {
    "name": "System Design",
    "width": 85,
    "video": "https://d1o11p1jeyf1dw.cloudfront.net/SystemDesign.mp4",
    "github": "https://github.com/jaredar1232/System-Design--BestBuy",
    "details": {
      "name": "System Design",
      "description": "working on another developer's unfamiliar codebase, optimize locally between varrying databases and live once deployed on AWS services",
      "keyPoints": [
        "Expanded data set from 100 unique records to 10,000,000 unique records",
        "Reduced database migration time by 80% by using automated CSV generation and batch import (~12 min down to ~2.5 min)",
        "Optimized query times between Mongoose ODM, MongoDB, and PostgreSQL and by indexing to reduce queries to an average of under 0.1ms per request",
        "Deployed independent database and servers; scaled from 1 EC2 instance with 2000 rps, 0% error rate, and 126ms latency up to 3 NGINX load balanced EC2 instance servers with 3000 rps, 0% error rate, and 63ms latency"
      ],
      "icons": [
        "MongoDB",
        "PostgreSQL",
        "Express.js",
        "React",
        "Node.js",
        "Jest",
        "AWS",
        "NGINX",
        "Faker.js"
      ]
    }
  }
]
